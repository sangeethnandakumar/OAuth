@model AuthServer.Models.AdministrationVM;
@{
    Layout = null;
}
<html>
<head>
    <script src="~/js/jquery.js"></script>
    <script src="~/js/semantic.js"></script>
    <link href="~/css/semantic.css" rel="stylesheet" />
    <script src="~/js/administration.js"></script>
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.1/styles/default.min.css">
    <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/10.7.1/highlight.min.js"></script>
    <script>hljs.highlightAll();</script>
</head>
<body>

    <input type="hidden" id="selected-client" value="" />
    <input type="hidden" id="selected-api" value="" />
    <input type="hidden" id="selected-scope" value="" />

    @{
        void RenderGrantType(string grandName)
        {
            switch (grandName)
            {
                case "code":
                    <div class="ui blue horizontal label">authorization code</div>
                    break;
                case "client_credentials":
                    <div class="ui green horizontal label">client credentials</div>
                    break;
                case "implicit":
                    <div class="ui orange horizontal label">implicit</div>
                    break;
                case "resource_owner":
                    <div class="ui red horizontal label">resource owner</div>
                    break;
                default:
                    <div class="ui horizontal label">unsupported</div>
                    break;
            }
        }

        void RenderFlowIcon(string grandName)
        {
            switch (grandName)
            {
                case "code":
                    <img class="ui avatar image incircle" src="/images/chrome.png">
                    break;
                case "client_credentials":
                    <img class="ui avatar image incircle" src="/images/server.png">
                    break;
                case "implicit":
                    <img class="ui avatar image incircle" src="/images/spa.svg">
                    break;
                case "resource_owner":
                    <img class="ui avatar image incircle" src="/images/postman.png">
                    break;
                default:
                    <div class="ui horizontal label">unsupported</div>
                    break;
            }
        }

        void RenderScopes(string scope, string scopeId)
        {
            if (scope.Split(".").Length > 1)
            {
                <div class="header" onclick="loadScopeDetails('@scopeId')">
                    <a class="ui label">
                        @scope.Split(".")[0]
                    </a>
                    .@scope.Split(".")[1]
                </div>
            }
            else
            {
                <div class="header" onclick="loadScopeDetails('@scopeId')">
                    <a class="ui label">
                        @scope.Split(".")[0]
                    </a>
                </div>
            }
        }

    }

    <div class="ui mini modal" id="client_assign_scopes_model">
        <i class="close icon"></i>
        <div class="header">
            Available Scopes To Assign
        </div>
        <div class="content">
            <select class="ui fluid search dropdown" multiple="" id="clients_unappliedscope_list"></select>
        </div>
        <div class="actions">
            <div class="ui black deny button">
                Cancel
            </div>
            <div class="ui positive right labeled icon button" onclick="assignNewScopesToClient()">
                Apply New Scopes
                <i class="checkmark icon"></i>
            </div>
        </div>
    </div>

    <div class="ui mini modal" id="api_assign_scopes_model">
        <i class="close icon"></i>
        <div class="header">
            Available Scopes To Support
        </div>
        <div class="content">
            <select class="ui fluid search dropdown" multiple="" id="api_unappliedscope_list"></select>
        </div>
        <div class="actions">
            <div class="ui black deny button">
                Cancel
            </div>
            <div class="ui positive right labeled icon button" onclick="assignNewScopesToApi()">
                Support Scopes
                <i class="checkmark icon"></i>
            </div>
        </div>
    </div>

    <div class="ui two column doubling stackable grid">

        <div class="column padded">
            <h4>OAuth 2.0 Clients</h4>
            <button class="ui primary button" onclick="newClient()">
                Add New Client
            </button>
            <div class="ui raised segment">
                <div class="ui very relaxed list">
                    @if (Model.AuthClient.Count > 0)
                    {
                        @foreach (var client in Model.AuthClient)
                        {
                            <div class="item">
                                <img class="ui mini image" src="@client.Logo">
                                @{ RenderFlowIcon(client.AllowedGrantTypes); }
                                <div class="content">
                                    <div class="content">
                                        <div class="header"><a class="ui label">@client.ClientId</a> | <a href="#" class="client-handle" data-id="@client.Id">@client.ClientName</a> | @{ RenderGrantType(client.AllowedGrantTypes); }</div>
                                    </div>
                                    <div class="description">@client.ClientDescription</div>
                                    <div class="description">
                                        @if (client.IsActive)
                                        {
                                            <div class="description" style="margin-top: 10px;">
                                                <a class="ui green empty circular label"></a>
                                                <a class="ui basic label">ACTIVE</a>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="description" style="margin-top: 10px;">
                                                <a class="ui red empty circular label"></a>
                                                <a class="ui basic label">SUSPENDED</a>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="ui visible message">
                            <p>No Clients Configured</p>
                        </div>
                    }
                </div>
            </div>

            <h4>OAuth 2.0 API Resources</h4>
            <button class="ui primary button" onclick="newApi()">
                Add New API
            </button>
            <div class="ui raised segment">
                <div class="ui very relaxed list">

                    @if (Model.AuthApiResources.Count > 0)
                    {
                        @foreach (var api in Model.AuthApiResources)
                        {
                            <div class="item">
                                <img class="ui mini image" src="/images/api.png">
                                <div class="content">
                                    <div class="content">
                                        <div class="header">
                                            <a class="ui green label">@api.Name</a> | <a href="#" class="api-handle" data-id="@api.Id">@api.DisplayName</a>
                                        </div>
                                    </div>
                                    <div class="description">@api.Description</div>
                                    <div class="description">
                                        @if (api.IsActive)
                                        {
                                            <div class="description" style="margin-top: 10px;">
                                                <a class="ui green empty circular label"></a>
                                                <a class="ui basic label">ACTIVE</a>
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="description" style="margin-top: 10px;">
                                                <a class="ui red empty circular label"></a>
                                                <a class="ui basic label">SUSPENDED</a>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="ui visible message">
                            <p>No API's Configured</p>
                        </div>
                    }

                </div>
            </div>

            <h4>OAuth 2.0 All Scopes</h4>
            <button class="ui primary button" onclick="newScope()">
                Add New Scope
            </button>
            <div class="ui raised segment">
                @{
                    var distinctScopeHeader = Model.AuthScopes.Select(x => x.ScopeName.Split(".")[0]).Distinct();

                    @if (Model.AuthScopes.Count > 0)
                    {
                        foreach (var distinct in distinctScopeHeader)
                        {
                            var scopes = Model.AuthScopes.Where(x => x.ScopeName.StartsWith(distinct));
                            <div class="ui styled fluid accordion">
                                <div class="title">
                                    <i class="dropdown icon"></i>
                                    @distinct
                                </div>
                                <div class="content">
                                    <div class="transition hidden">
                                        <div class="ui very relaxed list">
                                            @foreach (var scope in scopes)
                                            {
                                                <div class="item">
                                                    <img class="ui mini image" src="/images/scope.png">
                                                    <div class="content">
                                                        @{RenderScopes(scope.ScopeName, scope.Id.ToString());}
                                                    </div>
                                                    <div class="description scope-desc">@scope.ScopeDescription</div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="ui visible message">
                            <p>No Scopes Configured</p>
                        </div>
                    }
                }
            </div>

            <h4>OAuth 2.0 Implementation Example</h4>
            <div class="ui raised segment">
                <pre>
                <code class="csharp" id="code">
                        [Select an entity to get ASP.NET Core Startup Config]
                    </code>
                </pre>
            </div>
        </div>

        <div class="column" id="infotab">
            <h4>Welcome To Identity Server Administration Panel</h4>
            <div class="ui segment">
                <center>
                    <img class="ui image" src="https://cdn2.iconfinder.com/data/icons/whcompare-isometric-web-hosting-servers/50/cloud-server-512.png" style=" width: 150px;" />
                    <div class="ui icon header">
                        Administrate the server by opening a configuration
                    </div>
                </center>
            </div>
        </div>

        <!-- SCOPE DETAILS -->
        <div class="column" id="scope_details" style="display:none">
            <h4>Details</h4>

            <div class="ui segment">
                <form class="ui form">
                    <div class="ui raised segment">
                        <h4 class="ui dividing header">Configuration Setup</h4>

                        <div class="field" id="scope_api_association_section">
                            <label>Associate Scope with API</label>
                            <div class="ui selection dropdown" id="scope_api_association">
                                <input type="hidden" name="gender">
                                <i class="dropdown icon"></i>
                                <div class="default text">Select an API</div>
                                <div class="menu">
                                    <div class="item" data-value="">Generic Association</div>
                                    @foreach (var api in Model.AuthApiResources)
                                    {
                                        <div class="item" data-value="@api.Name">@api.DisplayName</div>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="sixteen wide field">
                            <label>Scope Name</label>
                            <input type="text" id="scope_name" maxlength="50" placeholder="SpotifyMusic.Upload">
                        </div>
                        <div class="sixteen wide field">
                            <label>Scope Description</label>
                            <input type="text" id="scope_desc" maxlength="50" placeholder="Allows upload permission on SpotifyMusic API">
                        </div>
                    </div>
                </form>

                <form class="ui form">
                    <div class="fields">
                        <div class="eight wide field">
                            <button class="positive ui fluid button" onclick="saveScope()">Save Scope</button>
                        </div>
                        <div class="eight wide field">
                            <button class="negative ui fluid button" onclick="deleteScope()">Delete Scope</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- API DETAILS -->
        <div class="column" id="api_details" style="display:none">
            <h4>Details</h4>

            <div class="ui segment">
                <form class="ui form">
                    <div class="ui raised segment">
                        <h4 class="ui dividing header">Configuration Setup</h4>
                        <div class="sixteen wide field">
                            <label>API Name</label>
                            <input type="text" id="api_name" maxlength="50" placeholder="api-spotify" pattern="^[a-z0-9-]{3,18}$">
                            <small class="info-msg">[Lowercase | Hyphens/Digits | 3-18 chars]</small>
                        </div>
                        <div class="sixteen wide field">
                            <label>API Display Name</label>
                            <input type="text" id="api_display_name" maxlength="50" placeholder="Spotify Music API (Production)" pattern="^[A-Za-z0-9\.\-\s]{3,30}$">
                            <small class="info-msg">[3-30 chars]</small>
                        </div>
                        <div class="sixteen wide field">
                            <label>API Description</label>
                            <input type="text" id="api_desc" maxlength="50" placeholder="BETA API to support streaming of music resources" pattern="^[A-Za-z0-9\.\-\s]{3,350}$">
                            <small class="info-msg">[3-350 chars]</small>
                        </div>
                    </div>
                </form>

                <div class="ui yellow message" id="api_scope_section_msg" style="display:none">
                    <p>You can add supported scopes once you save the api</p>
                </div>

                <div class="ui raised segment" id="api_scope_section">
                    <h4 class="ui dividing header">Supported Scopes</h4>
                    <button class="ui primary button" onclick="openApiAssignScopesModel()">
                        Support New Scope
                    </button>
                    <table class="ui basic table">
                        <thead>
                            <tr>
                                <th>Scope Name</th>
                                <th>Description</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="api_allowedscopes">
                        </tbody>
                    </table>
                </div>

                <form class="ui form">
                    <div class="fields">
                        <div class="six wide field">
                            <button class="positive ui fluid button" onclick="saveApi()">Save API</button>
                        </div>
                        <div class="six wide field">
                            <button class="orange ui fluid button" onclick="activateInactivateApi()">Suspend API</button>
                        </div>
                        <div class="six wide field">
                            <button class="negative ui fluid button" onclick="deleteApi()">Delete API</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <!-- CLIENT DETAILS -->
        <div class="column" id="client_details" style="display:none">
            <h4>Details</h4>

            <div class="ui info message">
                <div class="header">
                    Note: No Strict Validations
                </div>
                <ul class="list">
                    <li>Each fields will show hints about an optimal recommended value. If it's not satisfied it'll highlight the field in red color.</li>
                    <li>You can still save a client without satisying to these validations.</li>
                    <li>It might have unexpected errors.</li>
                </ul>
            </div>

            <div class="ui segment">

                <form class="ui form">

                    <div class="ui raised segment">


                        <div class="ui negative message" id="client_scope_section_grant_msg">
                            <i class="close icon"></i>
                            <div class="header">
                                AuthFlow/Grant is locked
                            </div>
                            <p>
                                If you want to change the grant of this client, Delete the client and create new one
                            </p>
                        </div>

                        <h4 class="ui dividing header">Authentication Flow</h4>
                        <div class="field">
                            <label>Grant</label>
                            <div class="ui selection dropdown" id="client_grant">
                                <input type="hidden" name="gender">
                                <i class="dropdown icon"></i>
                                <div class="default text">Select a grand</div>
                                <div class="menu">
                                    <div class="item" data-value="code">Authorization Code Grant</div>
                                    <div class="item" data-value="client_credentials">Client Credentials Grant</div>
                                    <div class="item" data-value="implicit">Implicit Grant</div>
                                    <div class="item" data-value="resource_owner">Resource Owner Password Grant</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="ui raised segment">
                        <h4 class="ui dividing header">Meta</h4>
                        <div class="field">
                            <label>Client Logo</label>
                            <div class="ui placeholder segment">
                                <div class="ui icon header">
                                    <img class="ui large centered image" src="https://localhost:5005/images/spotify.webp" id="client_logo">
                                </div>
                                <input type="file" class="ui primary button" value="Browse Logo" onchange="readImage(this);" />
                            </div>
                        </div>
                    </div>

                    <div class="ui raised secondary segment">
                        <h4 class="ui dividing header">Configuration Setup</h4>

                        <div class="sixteen wide input field">
                            <label>Client Name</label>
                            <input type="text" id="client_name" placeholder="Spotify MVC BETA" pattern="^[A-Za-z0-9\.\-\s]{3,30}$">
                            <small class="info-msg">[3-30 chars]</small>
                        </div>
                        <div class="field">
                            <div class="ui checkbox">
                                <input type="checkbox" tabindex="0" class="hidden">
                                <label>Mark As BETA/Test Build</label>
                            </div>
                        </div>
                        <div class="sixteen wide input field">
                            <label>Client Description</label>
                            <input type="text" id="client_desc" placeholder="BETA Build for Spotify MVC with GDR Support" pattern="^[A-Za-z0-9\.\-\s]{3,350}$">
                            <small class="info-msg">[3-350 chars]</small>
                        </div>
                        <div class="fields">
                            <div class="eight wide input field">
                                <label>Client Id</label>
                                <input type="text" id="client_id" placeholder="mvc-client" pattern="^[a-z0-9-]{3,18}$">
                                <small class="info-msg">[Lowercase | Hyphens/Digits | 3-18 chars]</small>
                            </div>
                            <div class="eight wide input field">
                                <label>Client Secret</label>
                                <input type="text" id="client_secret" placeholder="MVCClientSecret" pattern="(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*\W)">
                                <small class="info-msg">[Min 1 lowercase | Min 1 Uppercase | Min 1 Digit | Min 1 Wildchar]</small>
                            </div>
                        </div>
                        <div class="fields">
                            <div class="eight wide input field">
                                <label>Inactive Message</label>
                                <input type="text" id="client_inactive_message" placeholder="The Server Is Busy" pattern="^[A-Za-z0-9\s]{3,350}$">
                                <small class="info-msg">[3-350 chars]</small>
                            </div>
                            <div class="four wide input field">
                                <label>Identity Token Life</label>
                                <input type="number" id="client_identitytoken_life" placeholder="1000" min="5" max="604800">
                                <small class="info-msg">[In Sec | Min: 5sec | Max: 7days]</small>
                            </div>
                            <div class="four wide input field">
                                <label>Access Token Life</label>
                                <input type="number" id="client_accesstoken_life" placeholder="1000" min="5" max="604800">
                                <small class="info-msg">[In Sec | Min: 5sec | Max: 7days]</small>
                            </div>
                        </div>
                        <div class="sixteen wide input field">
                            <label>Redirect URI</label>
                            <input type="text" id="client_redirecturi" placeholder="https://localhost:44326/signin-oidc" pattern="(?<!\S)https:\/\/(?:\S+(?::\S*)?@@)?(?:(?:(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))|localhost)(?::[0-9]*)?(?:/[^\s]*)?(?!\S)$">
                            <small class="info-msg">[Should be https]</small>
                        </div>
                        <div class="sixteen wide input field">
                            <label>Post Redirect URI</label>
                            <input type="text" id="client_postredirecturi" placeholder="https://localhost:44326/signout-callback-oidc" pattern="(?<!\S)https:\/\/(?:\S+(?::\S*)?@@)?(?:(?:(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]+-?)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})))|localhost)(?::[0-9]*)?(?:/[^\s]*)?(?!\S)$">
                            <small class="info-msg">[Should be https]</small>
                        </div>
                        <div class="sixteen wide input field">
                            <label>CORS Allowed Orgins (Seperated By comma)</label>
                            <input type="text" id="client_cors_orgins" placeholder="https://localhost:44334">
                            <small class="info-msg">[Should be https | Should be orgins]</small>
                        </div>
                    </div>
                </form>

                <div class="ui yellow message" id="client_scope_section_msg" style="display:none">
                    <p>You can add allowed scopes once you save the client</p>
                </div>

                <div class="ui raised segment" id="client_scope_section">
                    <h4 class="ui dividing header">Allowed Scopes</h4>
                    <button class="ui primary button" onclick="openClientAssignScopesModel()">
                        Assign New Scope
                    </button>
                    <table class="ui basic table">
                        <thead>
                            <tr>
                                <th>Scope Name</th>
                                <th>Description</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="clients_allowedscopes">
                        </tbody>
                    </table>
                </div>

                <form class="ui form">
                    <div class="fields">
                        <div class="six wide field">
                            <button class="positive ui fluid button" onclick="saveClient()">Save Client</button>
                        </div>
                        <div class="six wide field">
                            <button class="orange ui fluid button" onclick="activateInactivateClient()">Suspend Client</button>
                        </div>
                        <div class="six wide field">
                            <button class="negative ui fluid button" onclick="deleteClient()">Delete Client</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</body>
</html>