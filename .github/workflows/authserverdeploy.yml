name: Build & Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - master
env:
  # Dotnet Config
  DOTNET_RESTORE: "dotnet restore ./OAuth.sln"
  DOTNET_BUILD: "dotnet build ./OAuth.sln --configuration Release --verbosity normal "
  DOTNET_PUBLISH: "dotnet publish ./AuthServer/AuthServer.csproj --configuration Release --no-build --output ./publish"
  DOTNET_PUBLISH_DIR: "./publish/"
  DOTNET_DLL_NAME: "AuthServer.dll"
  DOTNET_PUBLISH_PORT: 5003
  
  # Linux Config
  SERVER_SSH: ${{ secrets.DEPLOY_KEY }}
  SERVER_HOST: "4ih1.l.time4vps.cloud"
  SERVER_USERNAME: "root"
  SERVER_TARGET_DIR: "/home/root/auth.twileloop"
   

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Cache dotnet packages
        uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ env.DOTNET_RESTORE }}-${{ env.DOTNET_BUILD }}
          restore-keys: |
            ${{ env.DOTNET_RESTORE }}-
            ${{ env.DOTNET_BUILD }}-

      - name: Restore
        run: ${{ env.DOTNET_RESTORE }}

      - name: Build
        run: ${{ env.DOTNET_BUILD }}
          
      - name: Publish
        run: ${{ env.DOTNET_PUBLISH }}
        
      - name: Deploy to Linux Server
        uses: easingthemes/ssh-deploy@v2.1.3
        with:          
          args: -rltgoDzvO --delete
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
          DOTNET_ROOT: /usr/share/dotnet
          REMOTE_HOST: ${{ env.SERVER_HOST }}
          REMOTE_USER: ${{ env.SERVER_USERNAME }}
          SOURCE: ${{ env.DOTNET_PUBLISH_DIR }}
          TARGET: ${{ env.SERVER_TARGET_DIR }}           
     
  refresh:
    runs-on: ubuntu-latest
    needs: build
    steps:	
      - name: Terminate Sites
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          command_timeout: 10s
          script: |
            echo "Killing ${{ env.DOTNET_DLL_NAME }}..."
            if pgrep -f "dotnet ${{ env.DOTNET_DLL_NAME }}" > /dev/null; then 
                echo "Found a running dotnet ${{ env.DOTNET_DLL_NAME }} process."
                pid=$(pgrep -f "dotnet ${{ env.DOTNET_DLL_NAME }}")
                echo "Killing process with PID: $pid"
                trap '' TERM
                if kill $pid >/dev/null 2>&1; then
                    echo "Process killed successfully"
                else
                    echo "Failed to kill process"
                fi
                trap TERM
            else
                echo "No running dotnet ${{ env.DOTNET_DLL_NAME }} process found."
            fi
            echo "Done."  
            
      - name: Refresh Apache2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          command_timeout: 10s
          script: |
            cd ${{ env.SERVER_TARGET_DIR }}
            nohup dotnet ${{ env.DOTNET_DLL_NAME }} --urls=http://localhost:${{ env.DOTNET_PUBLISH_PORT }} &>/dev/null &
            echo "Launched ${{ env.DOTNET_DLL_NAME }}"
            echo "Restarting Apache2..."
            sudo systemctl restart apache2
            echo "Apache2 WebServer restarted"   
